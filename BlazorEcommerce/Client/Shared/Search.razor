@inject NavigationManager NavigationManager
@inject IProductService ProductService

<div class="input-group">
    <input @bind-value="searchText"
    @bind-value:event="oninput"
           type="search"
           list="products"
    @onkeyup="HandleSearch"
           class="form-control"
           placeholder="Search..."
    @ref="searchInput" />
    <datalist id="products">
        @foreach (var suggestion in suggestions)
        {
            <option>@suggestion</option>
        }
    </datalist>
    <div class="input-group-append" style="margin-left: 10px;">
        <button class="btn btn-primary" @onclick="SearchProducts">
            <span class="oi oi-magnifying-glass"></span>
        </button>
    </div>
</div>


@code {
    private string searchText = string.Empty;
    private List<string> suggestions = new List<string>();
    protected ElementReference searchInput;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await searchInput.FocusAsync();
        }
    }

    public void SearchProducts()
    {
        if (searchText.Length > 1)
        {
            NavigationManager.NavigateTo($"search/{searchText}/1");
        }
        else
        {
            NavigationManager.NavigateTo("");
        }
    }

    public async Task HandleSearch(KeyboardEventArgs args)
    {
        if (args.Key == null || args.Key.Equals("Enter"))
        {
            if (searchText.Length > 1)
            {
                SearchProducts();
            }
            else
            {
                NavigationManager.NavigateTo("");
            }
        }
        else if (searchText.Length > 1)
        {
            suggestions = await ProductService.GetProductSearchSuggestions(searchText);
        }
    }
}